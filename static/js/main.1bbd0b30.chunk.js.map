{"version":3,"sources":["components/services/api-services.js","components/ImageGalleryItem/ImageGalleryItem.styled.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.styled.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.styled.jsx","components/Button/Button.jsx","components/SearchBar/SearchBar.styled.jsx","components/SearchBar/SearchBar.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","App.js","index.js"],"names":["axios","defaults","baseURL","fetchImage","searchQuery","page","a","SEARCH_PARAMS","get","data","ImageGalleryItems","styled","li","ImageGalleryItemImage","img","ImageGalleryItem","image","getGalleryElement","src","webformatURL","alt","tags","onClick","largeImageURL","defaultProps","ImageGallerys","ul","ImageGallery","images","map","uuidv4","Buttons","button","BtnWrapper","div","Button","type","SearchBars","header","SearchForms","form","SearchFormButton","SearchFormBtnLabel","span","SearchFormInput","input","SearchBar","onSeacrh","onSubmit","e","preventDefault","target","elements","name","value","autocomplete","autoFocus","placeholder","Overlay","Modals","modalRoot","document","querySelector","Modal","handleCloseByKey","code","props","onClose","handleCloseByBackdrop","currentTarget","window","addEventListener","this","removeEventListener","createPortal","children","Component","App","state","isLoading","showModal","largeImage","error","handeleFormSubmit","query","trim","setState","toast","getImages","hits","prevState","scrollOnLoadButton","console","log","handelGalleryImage","toggleModal","scrollTo","top","documentElement","scrollHeight","behavior","_","loadMore","length","position","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1bbd0b30.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = `https://pixabay.com/api`;\r\n\r\nexport const fetchImage = async (searchQuery, page) => {\r\n  const API_KEY = `22619356-ee7eba8b5a411fda9a95fba73`;\r\n  const SEARCH_PARAMS = `image_type=photo&orientation=horizontal&safesearch=true&page=${page}&per_page=12`;\r\n  const { data } = await axios.get(\r\n    `/?key=${API_KEY}&q=${searchQuery}&${SEARCH_PARAMS}`\r\n  );\r\n  return data;\r\n};\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const ImageGalleryItems = styled.li`\r\n  border-radius: 2px;\r\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\r\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\r\n`;\r\n\r\nexport const ImageGalleryItemImage = styled.img`\r\n  width: 100%;\r\n  height: 260px;\r\n  object-fit: cover;\r\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n  &:hover {\r\n  transform: scale(1.03);\r\n  cursor: zoom-in;\r\n}\r\n`;\r\n\r\n","import PropTypes from 'prop-types';\r\nimport { ImageGalleryItems, ImageGalleryItemImage } from './ImageGalleryItem.styled'\r\n\r\n\r\nexport const ImageGalleryItem = ({ image, getGalleryElement }) => {\r\n    const largeImage = () => getGalleryElement(image.largeImageURL)\r\n        \r\n    return (\r\n        <ImageGalleryItems>\r\n            <ImageGalleryItemImage\r\n                src={image.webformatURL}\r\n                alt={image.tags}\r\n                onClick={largeImage}\r\n            />\r\n        </ImageGalleryItems>\r\n    );\r\n};\r\n\r\nImageGalleryItem.defaultProps = {\r\n    tags: '',\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n    image: PropTypes.exact({\r\n        webformatURL: PropTypes.string.isRequired,\r\n        largeImageURL: PropTypes.string.isRequired,\r\n        tags: PropTypes.string,\r\n    }),\r\n    getGalleryElement: PropTypes.func.isRequired,\r\n};","import styled from \"@emotion/styled\";\r\n\r\nexport const ImageGallerys = styled.ul` \r\n  display: grid;\r\n  max-width: calc(100vw - 48px);\r\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\r\n  grid-gap: 16px;\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  padding: 0;\r\n  list-style: none;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`;","import PropTypes from 'prop-types';\r\nimport { ImageGalleryItem } from '../ImageGalleryItem/ImageGalleryItem'\r\nimport { ImageGallerys } from './ImageGallery.styled'\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const ImageGallery = ({ images, getGalleryElement }) => {\r\n    return (\r\n        <ImageGallerys>\r\n            {images.map(image =>\r\n                    <ImageGalleryItem\r\n                        key={uuidv4()}\r\n                        image={image}\r\n                        getGalleryElement={getGalleryElement}\r\n                    />\r\n                )}\r\n        </ImageGallerys>\r\n    );\r\n};\r\n\r\nImageGallery.propTypes = {\r\n    images: PropTypes.arrayOf(\r\n        PropTypes.exact({\r\n            id: PropTypes.number.isRequired,\r\n        }),\r\n    ),\r\n    getGalleryElement: PropTypes.func.isRequired\r\n};","import styled from \"@emotion/styled\";\r\n\r\nexport const Buttons = styled.button`\r\npadding: 8px 16px;\r\n  border-radius: 2px;\r\n  background-color: #3f51b5;\r\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  text-align: center;\r\n  display: inline-block;\r\n  color: #fff;\r\n  border: 0;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  font-family: inherit;\r\n  font-size: 18px;\r\n  line-height: 24px;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  min-width: 180px;\r\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\r\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\r\n  &:hover,\r\n  &:focus{\r\n    background-color: #303f9f;\r\n  }\r\n`;\r\n\r\nexport const BtnWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 12px;\r\n`;","import PropTypes from 'prop-types';\r\nimport { Buttons, BtnWrapper } from './Button.styled';\r\n\r\n\r\nexport const Button = ({ onClick }) => (\r\n  <BtnWrapper >\r\n    <Buttons type=\"button\" onClick={onClick}>\r\n      Load more\r\n    </Buttons>\r\n  </BtnWrapper>\r\n);\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};","import styled from '@emotion/styled';\r\n\r\nexport const SearchBars = styled.header`\r\n  top: 0;\r\n  left: 0;\r\n  position: sticky;\r\n  z-index: 1100;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 64px;\r\n  padding-right: 24px;\r\n  padding-left: 24px;\r\n  padding-top: 12px;\r\n  padding-bottom: 12px;\r\n  color: #fff;\r\n  background-color: #3f51b5;\r\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\r\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\r\n`;\r\n\r\nexport const SearchForms = styled.form`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  max-width: 600px;\r\n  background-color: #fff;\r\n  border-radius: 3px;\r\n  overflow: hidden;\r\n`;\r\n\r\n\r\nexport const SearchFormButton = styled.button`\r\n  display: inline-block;\r\n  width: 48px;\r\n  height: 48px;\r\n  border: 0;\r\n  background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\r\n  background-size: 40%;\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  opacity: 0.6;\r\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  cursor: pointer;\r\n  outline: none;\r\n\r\n  &:hover {\r\n  opacity: 1;\r\n}\r\n`;\r\n\r\nexport const SearchFormBtnLabel = styled.span`\r\n  position: absolute;\r\n  width: 1px;\r\n  height: 1px;\r\n  padding: 0;\r\n  overflow: hidden;\r\n  clip: rect(0, 0, 0, 0);\r\n  white-space: nowrap;\r\n  clip-path: inset(50%);\r\n  border: 0;\r\n`;\r\n\r\nexport const SearchFormInput = styled.input` \r\n  display: inline-block;\r\n  width: 100%;\r\n  font: inherit;\r\n  font-size: 20px;\r\n  border: none;\r\n  outline: none;\r\n  padding-left: 4px;\r\n  padding-right: 4px;\r\n\r\n  &::placeholder {\r\n  font: inherit;\r\n  font-size: 18px;\r\n}\r\n`;","import { SearchBars, SearchForms, SearchFormButton, SearchFormBtnLabel, SearchFormInput } from './SearchBar.styled'\r\n\r\nexport const SearchBar = ({ onSeacrh }) => {\r\n  \r\n  return (\r\n    <SearchBars>\r\n      <SearchForms onSubmit={e => {\r\n        e.preventDefault();\r\n          onSeacrh(e.target.elements.name.value)}}>\r\n      <SearchFormButton type=\"submit\">\r\n          <SearchFormBtnLabel>Search</SearchFormBtnLabel>\r\n        </SearchFormButton>\r\n\r\n        <SearchFormInput\r\n            type=\"text\"\r\n            name=\"name\"\r\n            autocomplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n        />\r\n      </SearchForms>\r\n    </SearchBars>\r\n   \r\n  )\r\n}\r\n\r\n\r\nexport default SearchBar;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Overlay = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n  z-index: 1200;\r\n`;\r\n\r\nexport const Modals = styled.div`\r\n  max-width: calc(100vw - 48px);\r\n  max-height: calc(100vh - 24px);\r\n\r\n`;","import React, { Component } from \"react\";\r\nimport { createPortal } from 'react-dom';\r\nimport { Overlay, Modals } from './Modal.styled'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default class Modal extends Component {\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('keydown', this.handleCloseByKey);\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('keydown', this.handleCloseByKey);\r\n    };\r\n\r\n    handleCloseByKey = e => {\r\n        if (e.code === 'Escape') {\r\n            this.props.onClose();\r\n        }\r\n    };\r\n\r\n    handleCloseByBackdrop = e => {\r\n        if (e.currentTarget === e.target) {\r\n            this.props.onClose();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return createPortal(\r\n            <Overlay onClick={this.handleCloseByBackdrop}>\r\n                <Modals>{this.props.children}\r\n                </Modals>\r\n            </Overlay>,\r\n            modalRoot\r\n        );\r\n    }\r\n}\r\n\r\nModal.defaultProps = {\r\n    children: null,\r\n}\r\n\r\nModal.propTypes = {\r\n    children: PropTypes.node,\r\n    onClose: PropTypes.func.isRequired,\r\n}","import React, { Component } from \"react\";\nimport toast, { Toaster } from \"react-hot-toast\";\nimport { fetchImage } from \"./components/services/api-services\";\nimport { ImageGallery } from \"./components/ImageGallery/ImageGallery\";\nimport { Button } from \"./components/Button/Button\";\nimport SearchBar from \"./components/SearchBar/SearchBar\";\nimport Modal from \"./components/Modal/Modal\";\nimport Loader from \"react-loader-spinner\";\n\nclass App extends Component {\n  state = {\n    images: [],\n    page: 1,\n    searchQuery: \"\",\n    isLoading: false,\n    showModal: false,\n    largeImage: \"\",\n    error: null,\n  };\n\n  //If in update query prevState not equal state make a fetch\n\n  async componentDidUpdate(_, prevState) {\n    if (prevState.searchQuery !== this.state.searchQuery) {\n      this.getImages();\n    }\n  }\n\n  //Write query in state\n\n  handeleFormSubmit = (query) => {\n    if (query.trim() === \"\") {\n      toast.error(\"Please enter correct query and try again.\");\n      return;\n    }\n\n    this.setState({\n      images: [],\n      page: 1,\n      searchQuery: query,\n      error: null,\n    });\n  };\n\n  getImages = async () => {\n    const { searchQuery, page } = this.state;\n\n    this.setState({\n      isLoading: true,\n    });\n\n    try {\n      const { hits } = await fetchImage(searchQuery, page);\n\n      this.setState((prevState) => ({\n        images: [...prevState.images, ...hits],\n        page: prevState.page + 1,\n      }));\n\n      if (page !== 1) {\n        this.scrollOnLoadButton();\n      }\n    } catch (error) {\n      console.log(\"Error\", error);\n      this.setState({ error });\n    } finally {\n      this.setState({\n        isLoading: false,\n      });\n    }\n  };\n\n  //Get full image, write in state and open modal window\n\n  handelGalleryImage = (largeImage) => {\n    this.setState({\n      largeImage: largeImage,\n      showModal: true,\n    });\n  };\n\n  //Modal toggle\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n      largeImage: \"\",\n    }));\n  };\n\n  // Скролл при клике на кнопку\n  //Scroll on click on the button\n\n  scrollOnLoadButton = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: \"smooth\",\n    });\n  };\n\n  render() {\n    const { images, showModal, largeImage, isLoading } = this.state;\n    const loadMore = images.length > 0 && images.length >= 12;\n    return (\n      <>\n        <Toaster position=\"top-right\" />\n        <SearchBar onSeacrh={this.handeleFormSubmit} />\n        <ImageGallery\n          images={images}\n          getGalleryElement={this.handelGalleryImage}\n        />\n        {loadMore && <Button onClick={this.getImages}>Load more</Button>}\n        {showModal && (\n          <Modal onClose={this.toggleModal}>\n            <img src={largeImage} alt=\"\" />\n          </Modal>\n        )}\n        {isLoading && <Loader />}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}