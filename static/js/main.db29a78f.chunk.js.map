{"version":3,"sources":["services/api-services.js","services/key.js","components/ImageGalleryItem/ImageGalleryItem.styled.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.styled.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.styled.jsx","components/Button/Button.jsx","components/SearchBar/SearchBar.styled.jsx","components/SearchBar/SearchBar.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","App.js","index.js"],"names":["axios","defaults","baseURL","fetchImage","searchQuery","page","a","get","params","per_page","image_type","orientation","safesearch","data","ImageGalleryItems","styled","li","ImageGalleryItemImage","img","ImageGalleryItem","image","getGalleryElement","src","webformatURL","alt","tags","onClick","largeImageURL","defaultProps","ImageGallerys","ul","ImageGallery","images","map","uuidv4","Buttons","button","BtnWrapper","div","Button","type","SearchBars","header","SearchForms","form","SearchFormButton","SearchFormBtnLabel","span","SearchFormInput","input","SearchBar","onSeacrh","onSubmit","e","preventDefault","target","elements","name","value","autocomplete","autoFocus","placeholder","Overlay","Modals","modalRoot","document","querySelector","Modal","handleCloseByKey","code","props","onClose","handleCloseByBackdrop","currentTarget","window","addEventListener","this","removeEventListener","createPortal","children","Component","App","state","isLoading","showModal","largeImage","error","handeleFormSubmit","query","trim","setState","toast","getImages","hits","prevState","scrollOnLoadButton","console","log","handelGalleryImage","toggleModal","scrollTo","top","documentElement","scrollHeight","behavior","_","loadMore","length","position","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.db29a78f.chunk.js","sourcesContent":["import { API_KEY } from \"./key\";\nimport axios from \"axios\";\n\naxios.defaults.baseURL = `https://pixabay.com/api`;\n\n// export const fetchImage = async (searchQuery, page) => {\n//   // const API_KEY = `22619356-ee7eba8b5a411fda9a95fba73`;\n//   const SEARCH_PARAMS = `image_type=photo&orientation=horizontal&safesearch=true&page=${page}&per_page=12`;\n//   const { data } = await axios.get(\n//     `/?key=${API_KEY}&q=${searchQuery}&${SEARCH_PARAMS}`\n//   );\n//   return data;\n// };\n\nexport const fetchImage = async (searchQuery, page) => {\n  const { data } = await axios.get(\n    `/?key=${API_KEY}&q=${searchQuery}&page=${page}`,\n    {\n      params: {\n        per_page: 12,\n        image_type: \"photo\",\n        orientation: \"horizontal\",\n        safesearch: \"true\",\n        page: `${page}`,\n      },\n    }\n  );\n  return data;\n};\n","export const API_KEY = `22619356-ee7eba8b5a411fda9a95fba73`;\n","import styled from \"@emotion/styled\";\n\nexport const ImageGalleryItems = styled.li`\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport const ImageGalleryItemImage = styled.img`\n  width: 100%;\n  height: 260px;\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`;\n","import PropTypes from \"prop-types\";\nimport {\n  ImageGalleryItems,\n  ImageGalleryItemImage,\n} from \"./ImageGalleryItem.styled\";\n\nexport const ImageGalleryItem = ({ image, getGalleryElement }) => {\n  const largeImage = () => getGalleryElement(image.largeImageURL);\n\n  return (\n    <ImageGalleryItems>\n      <ImageGalleryItemImage\n        src={image.webformatURL}\n        alt={image.tags}\n        onClick={largeImage}\n      />\n    </ImageGalleryItems>\n  );\n};\n\nImageGalleryItem.defaultProps = {\n  tags: \"\",\n};\n\nImageGalleryItem.propTypes = {\n  image: PropTypes.exact({\n    webformatURL: PropTypes.string.isRequired,\n    largeImageURL: PropTypes.string.isRequired,\n    tags: PropTypes.string,\n  }),\n  getGalleryElement: PropTypes.func.isRequired,\n};\n","import styled from \"@emotion/styled\";\n\nexport const ImageGallerys = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import PropTypes from \"prop-types\";\nimport { ImageGalleryItem } from \"../ImageGalleryItem/ImageGalleryItem\";\nimport { ImageGallerys } from \"./ImageGallery.styled\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport const ImageGallery = ({ images, getGalleryElement }) => {\n  return (\n    <ImageGallerys>\n      {images.map((image) => (\n        <ImageGalleryItem\n          key={uuidv4()}\n          image={image}\n          getGalleryElement={getGalleryElement}\n        />\n      ))}\n    </ImageGallerys>\n  );\n};\n\nImageGallery.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.number.isRequired,\n    })\n  ),\n  getGalleryElement: PropTypes.func.isRequired,\n};\n","import styled from \"@emotion/styled\";\n\nexport const Buttons = styled.button`\n  padding: 8px 16px;\n  border-radius: 2px;\n  background-color: #3f51b5;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: inline-block;\n  color: #fff;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  min-width: 180px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  &:hover,\n  &:focus {\n    background-color: #303f9f;\n  }\n`;\n\nexport const BtnWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 12px;\n`;\n","import PropTypes from \"prop-types\";\nimport { Buttons, BtnWrapper } from \"./Button.styled\";\n\nexport const Button = ({ onClick }) => (\n  <BtnWrapper>\n    <Buttons type=\"button\" onClick={onClick}>\n      Load more\n    </Buttons>\n  </BtnWrapper>\n);\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n","import styled from \"@emotion/styled\";\n\nexport const SearchBars = styled.header`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: #3f51b5;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const SearchForms = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchFormButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-image: url(\"https://image.flaticon.com/icons/svg/149/149852.svg\");\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const SearchFormBtnLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nexport const SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import {\n  SearchBars,\n  SearchForms,\n  SearchFormButton,\n  SearchFormBtnLabel,\n  SearchFormInput,\n} from \"./SearchBar.styled\";\n\nexport const SearchBar = ({ onSeacrh }) => {\n  return (\n    <SearchBars>\n      <SearchForms\n        onSubmit={(e) => {\n          e.preventDefault();\n          onSeacrh(e.target.elements.name.value);\n        }}\n      >\n        <SearchFormButton type=\"submit\">\n          <SearchFormBtnLabel>Search</SearchFormBtnLabel>\n        </SearchFormButton>\n\n        <SearchFormInput\n          type=\"text\"\n          name=\"name\"\n          autocomplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n        />\n      </SearchForms>\n    </SearchBars>\n  );\n};\n\nexport default SearchBar;\n","import styled from \"@emotion/styled\";\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`;\n\nexport const Modals = styled.div`\n  max-width: calc(100vw - 48px);\n  max-height: calc(100vh - 24px);\n`;\n","import React, { Component } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { Overlay, Modals } from \"./Modal.styled\";\nimport PropTypes from \"prop-types\";\n\nconst modalRoot = document.querySelector(\"#modal-root\");\n\nexport default class Modal extends Component {\n  componentDidMount() {\n    window.addEventListener(\"keydown\", this.handleCloseByKey);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"keydown\", this.handleCloseByKey);\n  }\n\n  handleCloseByKey = (e) => {\n    if (e.code === \"Escape\") {\n      this.props.onClose();\n    }\n  };\n\n  handleCloseByBackdrop = (e) => {\n    if (e.currentTarget === e.target) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    return createPortal(\n      <Overlay onClick={this.handleCloseByBackdrop}>\n        <Modals>{this.props.children}</Modals>\n      </Overlay>,\n      modalRoot\n    );\n  }\n}\n\nModal.defaultProps = {\n  children: null,\n};\n\nModal.propTypes = {\n  children: PropTypes.node,\n  onClose: PropTypes.func.isRequired,\n};\n","import React, { Component } from \"react\";\nimport toast, { Toaster } from \"react-hot-toast\";\nimport { fetchImage } from \"./services/api-services\";\nimport { ImageGallery } from \"./components/ImageGallery/ImageGallery\";\nimport { Button } from \"./components/Button/Button\";\nimport SearchBar from \"./components/SearchBar/SearchBar\";\nimport Modal from \"./components/Modal/Modal\";\nimport Loader from \"react-loader-spinner\";\n\nclass App extends Component {\n  state = {\n    images: [],\n    page: 1,\n    searchQuery: \"\",\n    isLoading: false,\n    showModal: false,\n    largeImage: \"\",\n    error: null,\n  };\n\n  //If in update query prevState not equal state make a fetch\n\n  async componentDidUpdate(_, prevState) {\n    if (prevState.searchQuery !== this.state.searchQuery) {\n      this.getImages();\n    }\n  }\n\n  //Write query in state\n\n  handeleFormSubmit = (query) => {\n    if (query.trim() === \"\") {\n      toast.error(\"Please enter correct query and try again.\");\n      return;\n    }\n\n    this.setState({\n      images: [],\n      page: 1,\n      searchQuery: query,\n      error: null,\n    });\n  };\n\n  getImages = async () => {\n    const { searchQuery, page } = this.state;\n\n    this.setState({\n      isLoading: true,\n    });\n\n    try {\n      const { hits } = await fetchImage(searchQuery, page);\n\n      this.setState((prevState) => ({\n        images: [...prevState.images, ...hits],\n        page: prevState.page + 1,\n      }));\n\n      if (page !== 1) {\n        this.scrollOnLoadButton();\n      }\n    } catch (error) {\n      console.log(\"Error\", error);\n      this.setState({ error });\n    } finally {\n      this.setState({\n        isLoading: false,\n      });\n    }\n  };\n\n  //Get full image, write in state and open modal window\n\n  handelGalleryImage = (largeImage) => {\n    this.setState({\n      largeImage: largeImage,\n      showModal: true,\n    });\n  };\n\n  //Modal toggle\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n      largeImage: \"\",\n    }));\n  };\n\n  // Скролл при клике на кнопку\n  //Scroll on click on the button\n\n  scrollOnLoadButton = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: \"smooth\",\n    });\n  };\n\n  render() {\n    const { images, showModal, largeImage, isLoading } = this.state;\n    const loadMore = images.length > 0 && images.length >= 12;\n    return (\n      <>\n        <Toaster position=\"top-right\" />\n        <SearchBar onSeacrh={this.handeleFormSubmit} />\n        <ImageGallery\n          images={images}\n          getGalleryElement={this.handelGalleryImage}\n        />\n        {loadMore && <Button onClick={this.getImages}>Load more</Button>}\n        {showModal && (\n          <Modal onClose={this.toggleModal}>\n            <img src={largeImage} alt=\"\" />\n          </Modal>\n        )}\n        {isLoading && <Loader />}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}